// Plecs editor
//
// Plecs is a simple entity definition language that
// lets us experiment with entities and queries without
// having to write & compile C/C++ code.
//

// These first statements create a basic taxonomy. This 
// enables us to, for example, query for "Planet" and 
// find entities that have RockyPlanet or GasGiant.
(IsA, CelestialBody) { 
  Star, Satellite, DwarfPlanet, Planet
}

IsA(RockyPlanet, Planet)
IsA(GasGiant, Planet)

// Create a hierarchy with the sun as root and the
// planets as children. The { } syntax uses the builtin
// ChildOf relation to create the hierarchy.
Star(Sun) {
 // A 'with' statement lets us add the same component(s)
 // to multiple entities.
 with RockyPlanet {
  Mercury, Venus, Earth, Mars 
 }

 with GasGiant { 
  Jupiter, Saturn, Neptune, Uranus 
 }

 with DwarfPlanet { Pluto, Ceres }
}

// To avoid deep indentation, we can open the scope of
// a nested entity outside of the initial hierarchy.
Sun.Earth {
 Satellite(Moon)
 with Satellite, Artificial { HubbleTelescope, ISS }
}

Sun.Mars {
 with Satellite { Phobos, Deimos }
 with Satellite, Artificial { MarsOrbiter }
}

Sun.Jupiter {
 with Satellite { Europa, Io, Callisto, Ganymede }
}

Sun.Saturn {
 with Satellite { Titan, Enceladus }
}

Sun.Pluto {
  Satellite(Charon)
}

// Add continents & countries to Earth
Sun.Earth {
 with Continent { 
  Europe, Asia, Africa, NorthAmerica, SouthAmerica,
  Australia, Antartica
 }

 with Country {
   // To prevent adding 'Country' to NorthAmerica and
   // Europe we use (), which explicitly marks them as
   // something we don't want to add anything to.
   NorthAmerica() { UnitedStates, Canada }
   Europe() { Netherlands, Germany, France, UK }
 }
}
